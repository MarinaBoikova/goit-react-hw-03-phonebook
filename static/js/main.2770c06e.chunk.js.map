{"version":3,"sources":["components/App/ContactForm/ContactForm.jsx","components/App/common/Paper/Paper.jsx","components/App/ContactList/ContactList.jsx","components/App/Filter/Filter.jsx","components/App/App.jsx","components/App/services/localStorage.js","index.js"],"names":["ContactForm","state","name","number","onSubmit","e","preventDefault","props","id","nanoid","reset","onChangeInput","target","value","setState","this","type","onChange","placeholder","required","pattern","title","Component","Paper","children","ContactList","contacts","onDelete","map","onClick","Filter","STORAGE_KEY","App","filter","newContact","some","contact","alert","prevState","onFilterChange","elem","toLowerCase","includes","deleteContact","savedContacts","key","JSON","parse","localStorage","getItem","error","storage","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2770c06e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n\n    this.props.onSubmit({\n      id: nanoid(),\n      name,\n      number,\n    });\n    this.reset();\n  };\n\n  onChangeInput = e => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <label>\n          <span>Name:</span>\n          <input\n            type=\"text\"\n            onChange={this.onChangeInput}\n            value={name}\n            name=\"name\"\n            placeholder=\"example: Boykova Marina\"\n            required\n          />\n        </label>\n\n        <label>\n          <span>Number:</span>\n          <input\n            type=\"tel\"\n            onChange={this.onChangeInput}\n            value={number}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"example: 525-17-79\"\n            required\n          />\n        </label>\n\n        <button type=\"submit\">Add Contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\n\nconst Paper = ({ children }) => {\n  return <div>{children}</div>;\n};\n\nPaper.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Paper;\n","import Paper from '../common/Paper/Paper';\n\nconst ContactList = ({ contacts, onDelete }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <Paper key={id}>\n        <li>\n          <span>{name}</span>: {number}\n        </li>\n        <button type=\"button\" onClick={() => onDelete(id)}>\n          Delete\n        </button>\n      </Paper>\n    ))}\n  </ul>\n);\n\nexport default ContactList;\n","const Filter = ({ value, onChange }) => {\n  return (\n    <div>\n      <label>\n        <span>Find contacts by name</span>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={onChange}\n          placeholder=\"example: Ivan\"\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport * as storage from './services/localStorage';\n\nconst STORAGE_KEY = 'contacts';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const savedContacts = storage.get(STORAGE_KEY);\n    if (savedContacts) {\n      this.setState({ contacts: savedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      storage.save(STORAGE_KEY, contacts);\n    }\n  }\n\n  onSubmit = newContact => {\n    const { id, name, number } = newContact;\n\n    const isInContactList = contact => contact.name === newContact.name;\n\n    this.state.contacts.some(isInContactList)\n      ? alert(`${newContact.name} is already in contacts`)\n      : this.setState(prevState => ({\n          contacts: [...prevState.contacts, { id, name, number }],\n        }));\n  };\n\n  onChangeInput = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  onFilterChange = () => {\n    const value = this.state.filter;\n    return this.state.contacts.filter(elem =>\n      elem.name.toLowerCase().includes(value.toLowerCase()),\n    );\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(elem => elem.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    return (\n      <div>\n        <div>\n          <h1>Phonebook</h1>\n          <div>\n            <ContactForm onSubmit={this.onSubmit} contacts={contacts} />\n          </div>\n          <h2>Contacts:</h2>\n          <Filter value={filter} onChange={this.onChangeInput} />\n          <ContactList\n            contacts={this.onFilterChange()}\n            onDelete={this.deleteContact}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst get = key => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst remove = key => {\r\n  try {\r\n    return localStorage.removeItem(key);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { get, save, remove };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}